// automatically generated by the FlatBuffers compiler, do not modify

namespace Data
{

using System;
using FlatBuffers;

public sealed class User : Table {
  public static User GetRootAsUser(ByteBuffer _bb) { return GetRootAsUser(_bb, new User()); }
  public static User GetRootAsUser(ByteBuffer _bb, User obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public User __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public int Id { get { int o = __offset(4); return o != 0 ? bb.GetInt(o + bb_pos) : (int)0; } }
  public string Name { get { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetNameBytes() { return __vector_as_arraysegment(6); }

  public static Offset<User> CreateUser(FlatBufferBuilder builder,
      int id = 0,
      StringOffset nameOffset = default(StringOffset)) {
    builder.StartObject(2);
    User.AddName(builder, nameOffset);
    User.AddId(builder, id);
    return User.EndUser(builder);
  }

  public static void StartUser(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static Offset<User> EndUser(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<User>(o);
  }
  public static void FinishUserBuffer(FlatBufferBuilder builder, Offset<User> offset) { builder.Finish(offset.Value); }
};


}
